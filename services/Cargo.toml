[package]
name = "geoengine-services"
version.workspace = true
authors.workspace = true
edition.workspace = true
publish.workspace = true
license-file.workspace = true
documentation.workspace = true
repository.workspace = true
build = "build.rs"

[features]
# This compiles Geo Engine Pro
pro = [
  "geoengine-macros/pro",
]

[dependencies]
actix = { version = "0.13", default-features = false }
actix-files = "0.6"
actix-http = { version = "3.6", features = ["ws"] }
actix-multipart = "0.7"
actix-rt = "2.9"
actix-web = "4.5"
actix-web-actors = "4.3"
actix-web-httpauth = "0.8"
aes-gcm = "0.10.3"
aruna-rust-api = { version = "2.0.0-beta.12" }
async-trait = "0.1"
base64 = "0.22"
bb8-postgres = { version = "0.8", features = [
  "with-uuid-1",
  "with-chrono-0_4",
  "with-serde_json-1",
] }
bytes = "1.5"
chrono = { version = "0.4", features = ["serde"] }
config = "0.14"
derive_builder = "0.20"
erased-serde = "0.4"
flexi_logger = { version = "0.29", features = ["trc"] }
float-cmp = "0.9"
futures = "0.3"
futures-util = "0.3"
gdal = "0.17"
gdal-sys = "0.10"
geo = "0.28"
geoengine-datatypes = { path = "../datatypes" }
geoengine-macros = { path = "../macros" }
geoengine-operators = { path = "../operators" }
geojson = { version = "0.24", features = ["geo-types"] }
itertools = "0.13"
log = "0.4"
mime = "0.3"
oauth2 = "4.4.2"
openidconnect = "3.4"
# `opentelemetry` version has to be compatible with `tracing-opentelemetry` & `opentelemetry-*`
opentelemetry = { version = "0.24", default-features = false, features = ["trace"] }
opentelemetry-otlp = "0.17"
opentelemetry_sdk = "0.24"
ordered-float = { version = "4.2", features = ["serde"] }
num-traits = "0.2"
pbkdf2 = "0.12.2"
postgres-types = { version = "0.2", features = ["derive", "array-impls"] }
proj = "0.22" # needs to stay fixed to use fixed proj version
proj-sys = "0.19" # needs to stay fixed to use fixed proj version
pwhash = "1.0"
rand = "0.8"
rayon = "1.8"
reqwest = { version = "0.11", features = ["json", "multipart", "stream"] } # has to match with `oauth`
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_urlencoded = "0.7"
serde_with = "3.6"
snafu = "0.8"
stream-cancel = "0.8"
strum = { version = "0.26", features = ["derive"] }
time = "0.3"
tokio = { version = "1.36", features = [
  "macros",
  "fs",
  "signal",
  "sync",
  "rt-multi-thread",
] }
tokio-postgres = { version = "0.7" }
tonic = { version = "0.11.0", features = [
  "tls",
  "tls-roots",
] } # must be compatible with `aruna-rust-api`
tracing = "0.1"
tracing-actix-web = "0.7"
tracing-opentelemetry = "0.25"
tracing-subscriber = { version = "0.3", features = [
  "local-time",
  "ansi",
  "tracing-log",
] }
typetag = "0.2"
url = { version = "2.5", features = ["serde"] }
utoipa = { version = "4.2", features = [
  "actix_extras",
  "chrono",
  "url",
  "uuid",
] }
utoipa-swagger-ui = { version = "7.1", features = ["actix-web"] }
uuid = { version = "1.7", features = [
  "serde",
  "v4",
  "v5",
] } # must be compatible with `bb8-postgres`
validator = { version = "0.18", features = ["derive"] }
walkdir = "2.4"
zip = "2.1"
assert-json-diff = "2.0.2"
sha2 = "0.10.8"
convert_case = "0.6.0"

[target.'cfg(target_os = "linux")'.dependencies]
nix = { version = "0.29", features = ["socket"] }

[dev-dependencies]
assert_cmd = "2.0"
httptest = "0.16"
pretty_assertions = "1.4"
prost = "0.12.3"          # must be compatbile with aruna-rust-api
serial_test = "3.0"
tempfile = "3.10"
xml-rs = "0.8"

[build-dependencies]
anyhow = "1.0"
vergen = { version = "9.0", features = ["build", "cargo", "emit_and_set"] }
vergen-gitcl = { version = "1.0", features = ["build"] }

[[bench]]
name = "quota_check"
harness = false
required-features = ["pro"]

[lints]
workspace = true
