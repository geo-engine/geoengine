[package]
name = "geoengine-services"
version.workspace = true
authors.workspace = true
edition.workspace = true
publish.workspace = true
license-file.workspace = true
documentation.workspace = true
repository.workspace = true
build = "build.rs"
default-run = "geoengine-server"

[dependencies]
actix = { workspace = true }
actix-files = { workspace = true }
actix-http = { workspace = true }
actix-multipart = { workspace = true }
actix-rt = { workspace = true }
actix-web = { workspace = true }
actix-web-actors = { workspace = true }
actix-web-httpauth = { workspace = true }
aes-gcm = { workspace = true }
anyhow.workspace = true
aruna-rust-api = { workspace = true }
async-trait = { workspace = true }
base64 = { workspace = true }
bb8-postgres = { workspace = true }
bytes = { workspace = true }
chrono = { workspace = true }
clap_derive.workspace = true
clap.workspace = true
config = { workspace = true }
convert_case = { workspace = true }
erased-serde = { workspace = true }
flexi_logger = { workspace = true }
float-cmp = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
gdal = { workspace = true }
geo = { workspace = true }
geoengine-datatypes = { path = "../datatypes" }
geoengine-macros = { path = "../macros" }
geoengine-operators = { path = "../operators" }
geojson = { workspace = true }
itertools = { workspace = true }
log = { workspace = true }
mime = { workspace = true }
num-traits = { workspace = true }
oauth2 = { workspace = true }
openidconnect = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry_sdk = { workspace = true }
opentelemetry-otlp = { workspace = true }
ordered-float = { workspace = true }
paste = { workspace = true }
pbkdf2 = { workspace = true }
postgres-types = { workspace = true }
proj = { workspace = true }
proj-sys = { workspace = true }
pwhash = { workspace = true }
rand = { workspace = true }
rayon = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
serde_urlencoded = { workspace = true }
serde_with = { workspace = true }
sha2 = { workspace = true }
snafu = { workspace = true }
stac = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
time = { workspace = true }
tokio = { workspace = true }
tokio-postgres = { workspace = true }
tonic = { workspace = true }
tracing = { workspace = true }
tracing-actix-web = { workspace = true }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true }
url = { workspace = true }
utoipa = { workspace = true }
utoipa-swagger-ui = { workspace = true }
uuid = { workspace = true }
validator = { workspace = true }
walkdir = { workspace = true }
zip = { workspace = true }

[target.'cfg(target_os = "linux")'.dependencies]
nix = { version = "0.29", features = ["socket"] }

[dev-dependencies]
assert_cmd = { workspace = true }
httptest = { workspace = true }
pretty_assertions = { workspace = true }
prost = { workspace = true }             # must be compatbile with aruna-rust-api
serial_test = { workspace = true }
tempfile = { workspace = true }
xml-rs = { workspace = true }

[build-dependencies]
anyhow = { workspace = true }
vergen = { workspace = true, features = ["build", "cargo", "emit_and_set"] }
vergen-gitcl = { workspace = true, features = ["build"] }

[[bench]]
name = "quota_check"
harness = false

[lints]
workspace = true
